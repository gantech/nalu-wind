Simulations:
- name: sim1
  time_integrator: ti_1
  optimizer: opt1

# Specify the linear system solvers.
linear_solvers:

  # solver for scalar equations
- name: solve_scalar
  type: tpetra
  method: gmres
  preconditioner: sgs
  tolerance: 1e-6
  max_iterations: 75
  kspace: 75
  output_level: 0

  # solver for the pressure Poisson equation
- name: solve_cont
  type: tpetra
  method: gmres
  preconditioner: muelu
  tolerance: 1e-6
  max_iterations: 75
  kspace: 75
  output_level: 0
  recompute_preconditioner: no
  muelu_xml_file_name: ./milestone.xml


# Specify the differnt physics realms.  Here, we just have one for the fluid.
realms:

  # The fluid realm that uses the 5 km x 5 km x 1 km atmospheric LES mesh.
- name: fluidRealm
  mesh: mesh/couette_ideal_waves_ic.exo
  use_edges: yes
  automatic_decomposition_type: rcb

    # This defines the equations to be solved: momentum, pressure, static enthalpy,
    # and subgrid-scale turbulent kinetic energy.  The equation system will be iterated
    # a maximum of 4 outer iterations.
  equation_systems:
    name: theEqSys
    max_iterations: 3

      # This defines which solver to use for each equation set.  See the
      # "linear_solvers" block.  All use the scalar solver, except pressure.
    solver_system_specification:
      velocity: solve_scalar
      pressure: solve_cont

      # This defines the equation systems, maximum number of inner iterations,
      # and scaled nonlinear residual tolerance.
    systems:

    - LowMachEOM:
        name: myLowMach
        max_iterations: 1
        convergence_tolerance: 1.0e-5

    # Specify the properties of the fluid, in this case air.
  material_properties:

    target_name: [fluid_part]
    specifications:

        # Density here was computed such that P_ref = rho_ref*(R/mw)*300K
    - name: density
      type: constant
      value: 1.

    - name: viscosity
      type: constant
      value: 1.25e-04

    # The initial conditions are that pressure is uniformly 0 Pa and velocity
    # is 8 m/s from 245 degrees (southwest).  Initial temperature is not
    # specified here because later it is specified as read in from file.
    # Also, perturbations are applied near the surface to initiate turbulence.
  initial_conditions:
  - constant: ic_1
    target_name: [fluid_part]
        # These are dummy variables to be overwritten by nalu_wind_utils
    value:
      pressure: 0.0
      velocity: [1., 0.0, 0.0]

#      - user_function: ic_2
#        target_name: [fluid_part]
#        user_function_name:
#          velocity: boundary_layer_perturbation
#        user_function_parameters:
#          velocity: [1.0,0.0075398,0.0075398,50.0,8.0]


    # Boundary conditions are periodic on the north, south, east, and west
    # sides.  The lower boundary condition is a wall that uses an atmospheric
    # rough wall shear stress model.  The upper boundary is a stress free
    # rigid lid applied through symmetry, but the temperature is set to hold
    # a specified boundary normal gradient that matches the stable layer
    # immediately below.
  boundary_conditions:

  - periodic_boundary_condition: bc_inlet_outlet
    target_name: [inlet, outlet]
    periodic_user_data:
      search_tolerance: 0.0001

  - periodic_boundary_condition: bc_front_back
    target_name: [front, back]
    periodic_user_data:
      search_tolerance: 0.0001

  - inflow_boundary_condition: bc_topwall
    target_name: topwall
    inflow_user_data:
      velocity: [1.,0,0]

  - wall_boundary_condition: bc_bottomwall
    target_name: bottomwall
    wall_user_data:
      velocity: [0, 0, 0]      
      use_wall_function: no 

  mesh_motion:
    - name: waterwaves 
      mesh_parts: [fluid_part]
      frame: non_inertial
      motion:
        - type: water_waves
          wave_motion_model: Linear_prescribed
          amplitude: 0.0159 
          waveperiod: 8.0
          wavelength: 1.0

  solution_options:
    name: myOptions
    turbulence_model: laminar 

    options:
        - limiter:
            pressure: no
            velocity: no
        - projected_nodal_gradient:
            velocity: element
            pressure: element 
        - input_variables_from_file:
            velocity: velocity

  output:
    output_data_base_name: output/couette_waves.exo
    output_frequency: 1
    output_node_set: no
    output_variables:
    - velocity
    - pressure
    - mesh_displacement


Time_Integrators:
- StandardTimeIntegrator:
    name: ti_1
    start_time: 0.0
    termination_step_count: 3000 
    time_step: 0.1
    time_stepping_type: fixed
    time_step_count: 0
    second_order_accuracy: yes

    realms:
    - fluidRealm
